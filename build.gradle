plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
    id("com.google.protobuf") version "0.9.4"
}

version = "0.1"
group = "com.cyrilng"

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(':protos'))
    annotationProcessor('io.micronaut.serde:micronaut-serde-processor:2.4.0')
    implementation('io.micronaut.serde:micronaut-serde-jackson:2.4.0')
    implementation("io.micronaut:micronaut-discovery-core:4.2.1")
    implementation('io.micronaut.grpc:micronaut-grpc-runtime:4.2.0')
    implementation('javax.annotation:javax.annotation-api:1.3.2')
    runtimeOnly('ch.qos.logback:logback-classic:1.4.14')

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation('org.mockito:mockito-core:2.1.0')
    testImplementation('org.awaitility:awaitility:4.2.0')
    // https://mvnrepository.com/artifact/org.apache.commons/commons-pool2
    implementation('org.apache.commons:commons-pool2:2.12.0')
}


application {
    mainClass.set("com.cyrilng.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.23.4" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.56.1" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.cyrilng.*")
    }
}


tasks.named("dockerBuildNative") {
    images = ["ghcr.io/chilicizz/vanguard:${project.version}"]
    copy {
        from "${rootProject.projectDir}/fly.toml"
        into "build/docker"
    }
}

tasks.named("dockerBuild") {
    images = ["ghcr.io/chilicizz/vanguard:${project.version}"]
    copy {
        from "${rootProject.projectDir}/fly.toml"
        into "build/docker"
    }
}

tasks.register('printVersionInformation') {
    println project.version
}